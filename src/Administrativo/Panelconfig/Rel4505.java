/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administrativo.Panelconfig;

import Clases.Actualizar;
import Clases.FuncionesC;
import Clases.Funciones_AD;
import com.toedter.calendar.JDateChooser;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Resolucion4505.Config_Rel4505;

/**
 *
 * @author Camilo
 */
public class Rel4505 extends javax.swing.JPanel {

    String[] arrayEntidad;
    FuncionesC Funciones = new FuncionesC();
    Actualizar act = new Actualizar();
    Funciones_AD Funtions = new Funciones_AD();
    Config_Rel4505 rel4505 = new Config_Rel4505();

    /**
     * Creates new form Rel4505
     */
    public Rel4505() {
        initComponents();
        actdescheck(jCheckBox1, jDateChooser1, jDateChooser2);
        actdescheck(jCheckBox2, jDateChooser3, jDateChooser4);
        CargarEntidad();
        jLabel2.setVisible(false);
        jRadioButton1.setEnabled(false);
        jRadioButton2.setEnabled(false);
        jRadioButton3.setEnabled(false);
        jRadioButton4.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser3 = new com.toedter.calendar.JDateChooser();
        jDateChooser4 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(562, 345));
        setMinimumSize(new java.awt.Dimension(562, 345));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(125, 164, 222));
        jLabel1.setText("Generacion Archivo (4505)");

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Mensual");
        jCheckBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox1.setFocusable(false);
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jDateChooser2.setFocusable(false);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(125, 164, 222));
        jLabel5.setText("Hasta:");

        jDateChooser1.setFocusable(false);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(125, 164, 222));
        jLabel4.setText("Desde:");

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setText("Trimestral");
        jCheckBox2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jCheckBox2.setFocusable(false);
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(125, 164, 222));
        jLabel6.setText("Desde:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(125, 164, 222));
        jLabel7.setText("Hasta:");

        jDateChooser3.setFocusable(false);

        jDateChooser4.setFocusable(false);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/finalc1.png"))); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.setFocusable(false);
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/finalc2.png"))); // NOI18N
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton1MouseReleased(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 10)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(125, 164, 222));
        jLabel8.setText("Entidad:");

        jComboBox1.setFocusable(false);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/salirc1.png"))); // NOI18N
        jButton6.setToolTipText("Salir");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.setFocusable(false);
        jButton6.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/salirc2.png"))); // NOI18N
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jButton6MouseReleased(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cargando.gif"))); // NOI18N

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("1er Trimestre");
        jRadioButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton1.setFocusable(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setText("2do Trimestre");
        jRadioButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton2.setFocusable(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setText("3er Trimestre");
        jRadioButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton3.setFocusable(false);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setText("4to Trimestre");
        jRadioButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jRadioButton4.setFocusable(false);
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser3, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser4, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(jLabel8))
                        .addContainerGap(174, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(13, 13, 13)
                        .addComponent(jCheckBox2)
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        actdescheck(jCheckBox1, jDateChooser1, jDateChooser2);
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        if (jCheckBox2.isSelected() == true) {
            jRadioButton1.setEnabled(true);
            jRadioButton2.setEnabled(true);
            jRadioButton3.setEnabled(true);
            jRadioButton4.setEnabled(true);
        } else {
            jRadioButton1.setEnabled(false);
            jRadioButton2.setEnabled(false);
            jRadioButton3.setEnabled(false);
            jRadioButton4.setEnabled(false);
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jButton1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseReleased
        jLabel2.setVisible(true);
        hiloreporte ut = new hiloreporte(this);
        Thread thread = new Thread(ut);
        thread.start();
    }//GEN-LAST:event_jButton1MouseReleased

    private void jButton6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseReleased
        modulo_pyp.Modulo_PyP.d.panelc.Cprincipal.removeAll();
        modulo_pyp.Modulo_PyP.d.panelc.Cprincipal.repaint();
    }//GEN-LAST:event_jButton6MouseReleased

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if (jRadioButton1.isSelected() == true) {
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);
        } else {
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if (jRadioButton2.isSelected() == true) {
            jRadioButton1.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);
        } else {
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        if (jRadioButton3.isSelected() == true) {
            jRadioButton2.setSelected(false);
            jRadioButton1.setSelected(false);
            jRadioButton4.setSelected(false);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);
        } else {
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        if (jRadioButton4.isSelected() == true) {
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton1.setSelected(false);
            jDateChooser3.setEnabled(true);
            jDateChooser4.setEnabled(true);
        } else {
            jDateChooser3.setEnabled(false);
            jDateChooser4.setEnabled(false);
        }
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void actdescheck(JCheckBox check, JDateChooser date1, JDateChooser date2) {
        if (check.isSelected() == false) {
            date1.setEnabled(false);
            date2.setEnabled(false);
        } else {
            date1.setEnabled(true);
            date2.setEnabled(true);
        }
    }

    private void CargarEntidad() {
        try {
            arrayEntidad = Funciones.llenarCombo("SELECT `id`, `nombre_entidad` FROM `database`.`info_entidades`;", arrayEntidad, jComboBox1);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    private class hiloreporte extends Thread {

        JPanel form = null;

        public hiloreporte(JPanel form) {
            this.form = form;
        }

        @Override
        public void run() {
            String ruta = System.getProperty("user.home") + "/Desktop";
            final String ln = System.getProperty("line.separator");
            String patron = "yyyy-MM-dd", fecini = null, fecfin = null;
            SimpleDateFormat formato = new SimpleDateFormat(patron);
            boolean value = false;
            String nombreprograma = null, consecutivo = null, fechanacimiento = null, tipodoc = null, identificacion = null, apellido = null, nombre = null, codigoipsprimaria = "051540381702", apellido2, nombre2, etnia = "6", codocupacion = "9999", gestacion = "0", sifilis = "0", htagesta = "0", hipot = "0", genero = null, escolaridad = "1", sintomr = "2", tuberculosis = "0",
                    lepra = "3", nutri = "3", maltrato = "0", abusos = "2", infecciones = "2", mental = "7", cervix = "0", seno = "2", fluorosis = "2", fechapeso = "1800-01-01", peso = "999",
                    talla = "999", fechatalla = "1800-01-01", fechapparto = "1845-01-01", egparto = "0", bgc = "0", hepatitisb = "0", pentavalente = "0", polio = "0", dpt = "0", rotavirus = "0",
                    neumococo = "0", influenza = "0", fiebreA = "0", hepatitisA = "0", tripev = "0", vph = "0", tdtt = "0", placab = "0", fechaparto = "1845-01-01", fechasalidaparto = "1845-01-01",
                    fechalactancia = "1845-01-01", controlrecien = "1845-01-01", planificacionprimera = "1845-01-01", suministrometodo = "0", fechasuministro = "1845-01-01", controlprenatal1 = "1845-01-01", ncontroles = "0",
                    ultimocontrol = "1845-01-01", folico = "0", ferroso = "0", calcio = "0", agudezav = "1845-01-01", oftalmologia = "1845-01-01", fechadesnutricion = "1845-01-01", fechamaltrato = "1845-01-01", consultaviolencia = "1845-01-01",
                    fechanutricion = "1845-01-01", fechapsicologia = "1845-01-01", cyd1vez = "1845-01-01", sulfato = "0", vitaA = "0", joven1 = "1845-01-01", adulto1 = "1845-01-01", preservativosits = "0", preelisavih = "1845-01-01",
                    postelisavih = "1845-01-01", pdx = "0", fechahb = "1845-01-01", resultadohb = "0", fechassifilis = "1845-01-01", resultadossifilis = "0", fechatelisahiv = "1845-01-01", resultadoelisahiv = "0",
                    fechaths = "1845-01-01", resultadotsh = "0", tamizajecuellou = "0", citologia = "1845-01-01", citologiabet = "0", calidadmuestra = "0", codigoips = "051540381702", fechacolposcopi = "1845-01-01",
                    codigoipscolpo = "051540381702", fechabiopsia = "1845-01-01", resultadobiopsia = "0", codigobiopsia = "051540381702", fechamamografia = "1845-01-01", resultadomamografia = "0", codigomamografia = "051540381702",
                    fechabacaf = "1845-01-01", resultadobacaf = "1845-01-01", bacaf = "0", codigobacaf = "051540381702", fechahemoglobina = "1845-01-01", hemoglobina = "0", fechaglisemia = "1845-01-01", fechacreatinina = "1845-01-01",
                    creatinina = "0", fechaglicosada = "1845-01-01", glicosada = "0", fechamicroalbuminuria = "1845-01-01", fechahdl = "1845-01-01", fechabaciloscopia = "1845-01-01", baciloscopia = "4",
                    hipotiroidismo = "0", sgestacional = "0", scongenita = "0", tlepra = "0", leishmaniasis = "1845-01-01";
            if (jCheckBox1.isSelected() == true) {
                fecini = formato.format(jDateChooser1.getDate());
                fecfin = formato.format(jDateChooser2.getDate());
                if (jDateChooser1.getDate().getMonth() != jDateChooser2.getDate().getMonth()) {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar el mismo mes");
                } else {
                    long val = jDateChooser2.getCalendar().getTimeInMillis() - jDateChooser1.getCalendar().getTimeInMillis();
                    long dias = val / (24 * 60 * 60 * 1000);
                    switch (jDateChooser1.getDate().getMonth()) {
                        case 0:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 1:
                            if (dias == 27 || dias == 28) {
                                value = true;
                            }
                            break;
                        case 2:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 3:
                            if (dias == 29) {
                                value = true;
                            }
                            break;
                        case 4:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 5:
                            if (dias == 29) {
                                value = true;
                            }
                            break;
                        case 6:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 7:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 8:
                            if (dias == 29) {
                                value = true;
                            }
                            break;
                        case 9:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                        case 10:
                            if (dias == 29) {
                                value = true;
                            }
                            break;
                        case 11:
                            if (dias == 30) {
                                value = true;
                            }
                            break;
                    }
                }
                if (value == true) {
                    Object datames[][] = Funtions.RetornarDatos(act.rel4505mes(jComboBox1.getSelectedItem().toString(), fecini, fecfin));
                    Object dataparam[][] = Funtions.RetornarDatos(act.cargarparam());
                    try {
                        File archivo = new File(ruta, "4505 " + jComboBox1.getSelectedItem() + " Mensual.txt");
                        if (archivo.exists()) {
                            archivo.delete();
                            archivo.createNewFile();
                        } else {
                            archivo.createNewFile();
                        }
                        System.out.println(archivo.getAbsolutePath());
                        FileWriter escribir = new FileWriter(archivo, true);

                        for (int b = 0; b < datames.length; b++) {
                            //consecutivo
                            consecutivo = String.valueOf(b + 1);
                            //tipo de documento
                            tipodoc = datames[b][2].toString();
                            //identificacion
                            identificacion = datames[b][3].toString();
                            //apellido
                            apellido = datames[b][4].toString();
                            //Nombre programa.
                            switch (Integer.parseInt(datames[b][0].toString())) {
                                case 1:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso joven sano";
                                    } else {
                                        nombreprograma = "Joven sano";
                                    }
                                    break;
                                case 2:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso CYD";
                                    } else {
                                        nombreprograma = "Control CYD";
                                    }
                                    break;
                                case 3:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "ingreso adulto sano";
                                    } else {
                                        nombreprograma = "control adulto sano";
                                    }
                                    break;
                                case 4:
                                    nombreprograma = "Agudeza visual";
                                    break;
                                case 5:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso planificacion";
                                    } else {
                                        nombreprograma = "Control planificacion";
                                    }
                                    break;
                                case 6:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso Hta";
                                    } else {
                                        nombreprograma = "Control hta";
                                    }
                                    break;
                                case 7:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso diabetes";
                                    } else {
                                        nombreprograma = "Control diabetes";
                                    }
                                    break;
                                case 8:
                                    nombreprograma = "Citologia";
                                    break;
                                case 9:
                                    if (datames[b][1].toString().equals("1")) {
                                        nombreprograma = "Ingreso cpn";
                                    } else {
                                        nombreprograma = "Cpn";
                                    }
                                    break;
                                case 10:
                                    nombreprograma = "recien nacido";
                                    break;
                                case 11:
                                    nombreprograma = "post parto";
                                    break;
                            }
                            //Segundo apellido.
                            if (datames[b][5].toString().equals("")) {
                                apellido2 = "NONE";
                            } else {
                                apellido2 = datames[b][5].toString();
                            }
                            //Segundo nombre
                            if (datames[b][7].toString().equals("")) {
                                nombre2 = "NONE";
                            } else {
                                nombre2 = datames[b][7].toString();
                            }
                            //Primer nombre
                            nombre = datames[b][6].toString();
                            //Sexo
                            genero = datames[b][9].toString();
                            //fechanac
                            fechanacimiento = datames[b][8].toString();
                            //Etnia
                            if (datames[b][10].toString().equals("INDIGENA") || datames[b][11].toString().equals("INDIGENA")) {
                                etnia = "1";
                            } else {
                                if (datames[b][10].toString().equals("ROM") || datames[b][11].toString().equals("ROM")) {
                                    etnia = "2";
                                } else {
                                    if (datames[b][10].toString().equals("RAIZAL") || datames[b][11].toString().equals("RAIZAL")) {
                                        etnia = "3";
                                    } else {
                                        if (datames[b][10].toString().equals("AFROCOLOMBIANO") || datames[b][11].toString().equals("AFROCOLOMBIANO")) {
                                            etnia = "5";
                                        } else {
                                            if (datames[b][10].toString().equals("NO APLICA") || datames[b][11].toString().equals("NO APLICA")) {
                                                etnia = "6";
                                            }
                                        }
                                    }
                                }
                            }
                            //escolaridad
                            escolaridad = datames[b][12].toString();
                            //Gestacion
                            for (int i = 0; i < dataparam.length; i++) {
                                int año = 0;
                                String ed[] = datames[b][29].toString().split(" ");
                                String an = ed[0];
                                año = Integer.parseInt(an);
                                if (año < 10) {
                                    gestacion = "0";
                                } else {
                                    if (datames[b][9].toString().equals("M")) {
                                        gestacion = "0";
                                    } else {
                                        if (datames[b][13].toString().equals("0")) {
                                            gestacion = "1";
                                        } else {
                                            gestacion = "2";
                                        }
                                    }
                                }
                            }
                            //Sifilis
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("21")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString())) {
                                        if (datames[b][0].toString().equals("10")) {
                                            sifilis = dataparam[i][6].toString();
                                        } else {
                                            if (!datames[b][9].toString().equals("M")) {
                                                sifilis = dataparam[i][6].toString();
                                                break;
                                            } else {
                                                sifilis = "3";
                                            }
                                        }
                                    } else {
                                        if (datames[b][15].toString().equals(dataparam[i][5].toString())) {
                                            if (datames[b][0].toString().equals("10")) {
                                                sifilis = dataparam[i][6].toString();
                                            } else {
                                                if (!datames[b][9].toString().equals("M")) {
                                                    sifilis = dataparam[i][6].toString();
                                                    break;
                                                } else {
                                                    sifilis = "3";
                                                }
                                            }
                                        } else {
                                            if (datames[b][16].toString().equals(dataparam[i][5].toString())) {
                                                if (datames[b][0].toString().equals("10")) {
                                                    sifilis = dataparam[i][6].toString();
                                                } else {
                                                    if (!datames[b][9].toString().equals("M")) {
                                                        sifilis = dataparam[i][6].toString();
                                                        break;
                                                    } else {
                                                        sifilis = "3";
                                                    }
                                                }
                                            } else {
                                                if (datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                                    if (datames[b][0].toString().equals("10")) {
                                                        sifilis = dataparam[i][6].toString();
                                                    } else {
                                                        if (!datames[b][9].toString().equals("M")) {
                                                            sifilis = dataparam[i][6].toString();
                                                            break;
                                                        } else {
                                                            sifilis = "3";
                                                        }
                                                    }
                                                } else {
                                                    sifilis = "0";
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            //Hipertencion por gestacion
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("22")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        int año = 0;
                                        String ed[] = datames[b][29].toString().split(" ");
                                        String an = ed[0];
                                        año = Integer.parseInt(an);
                                        if (año < 10) {
                                            htagesta = "0";
                                            break;
                                        } else {
                                            if (!datames[b][9].toString().equals("M")) {
                                                htagesta = "1";
                                                break;
                                            } else {
                                                htagesta = "0";
                                            }
                                        }
                                    }
                                }
                            }
                            //Hipotiroidismo + tratamiento
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("23")) {
                                    int año = 0;
                                    String ed[] = datames[b][29].toString().split(" ");
                                    String an = ed[0];
                                    año = Integer.parseInt(an);
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString())) {
                                        if (año > 3) {
                                            hipot = "0";
                                            hipotiroidismo = "0";
                                            break;
                                        } else {
                                            hipot = "1";
                                            hipotiroidismo = datames[b][33].toString();
                                        }
                                    } else {
                                        if (datames[b][15].toString().equals(dataparam[i][5].toString())) {
                                            if (año > 3) {
                                                hipot = "0";
                                                hipotiroidismo = "0";
                                                break;
                                            } else {
                                                hipot = "1";
                                                hipotiroidismo = datames[b][34].toString();
                                            }
                                        } else {
                                            if (datames[b][16].toString().equals(dataparam[i][5].toString())) {
                                                if (año > 3) {
                                                    hipot = "0";
                                                    hipotiroidismo = "0";
                                                    break;
                                                } else {
                                                    hipot = "1";
                                                    hipotiroidismo = datames[b][35].toString();
                                                }
                                            } else {
                                                if (datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                                    if (año > 3) {
                                                        hipot = "0";
                                                        hipotiroidismo = "0";
                                                        break;
                                                    } else {
                                                        hipot = "1";
                                                        hipotiroidismo = datames[b][36].toString();
                                                    }
                                                } else {
                                                    hipot = "2";
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            //Sintomatico Respiratorio
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("24")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        sintomr = "1";
                                        break;
                                    } else {
                                        sintomr = "2";
                                    }
                                }
                            }
                            //tuberculosis
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("25")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        tuberculosis = "1";
                                        break;
                                    } else {
                                        tuberculosis = "0";
                                    }
                                }
                            }
                            //Lepra + tratamiento
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("26")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString())) {
                                        lepra = dataparam[i][6].toString();
                                        tlepra = datames[b][33].toString();
                                        break;
                                    } else {
                                        if (datames[b][15].toString().equals(dataparam[i][5].toString())) {
                                            lepra = dataparam[i][6].toString();
                                            tlepra = datames[b][34].toString();
                                            break;
                                        } else {
                                            if (datames[b][16].toString().equals(dataparam[i][5].toString())) {
                                                lepra = dataparam[i][6].toString();
                                                tlepra = datames[b][35].toString();
                                                break;
                                            } else {
                                                if (datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                                    lepra = dataparam[i][6].toString();
                                                    tlepra = datames[b][36].toString();
                                                    break;
                                                } else {
                                                    lepra = "3";
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            //Obesidad o desnutricion
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("27")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        nutri = dataparam[i][6].toString();
                                        break;
                                    } else {
                                        nutri = "3";
                                    }
                                }
                            }
                            //Victima de maltrato
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("28")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        int año = 0;
                                        String ed[] = datames[b][29].toString().split(" ");
                                        String an = ed[0];
                                        año = Integer.parseInt(an);
                                        if (año < 18) {
                                            maltrato = dataparam[i][6].toString();
                                            break;
                                        } else {
                                            if (!datames[b][9].toString().equals("M")) {
                                                maltrato = dataparam[i][6].toString();
                                                break;
                                            } else {
                                                maltrato = "0";
                                            }
                                        }
                                    } else {
                                        maltrato = "3";
                                    }
                                }
                            }
                            //Victima de violencia sexual
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("29")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        abusos = "1";
                                        break;
                                    } else {
                                        abusos = "2";
                                    }
                                }
                            }
                            //Infecciones sexuales
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("30")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        infecciones = "1";
                                        break;
                                    } else {
                                        infecciones = "2";
                                    }
                                }
                            }
                            //Enfermedad mental
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("31")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        mental = dataparam[i][6].toString();
                                        break;
                                    } else {
                                        mental = "7";
                                    }
                                }
                            }
                            //Cancer de cervix
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("32")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        if (!datames[b][9].toString().equals("M")) {
                                            cervix = "1";
                                        } else {
                                            cervix = "0";
                                        }
                                    } else {
                                        cervix = "2";
                                    }
                                }
                            }
                            //Cancer de seno
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("33")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        seno = "1";
                                    } else {
                                        seno = "2";
                                    }
                                }
                            }
                            //Fluorosis dental
                            //Fecha peso y peso
                            if (datames[b][19].toString().equals("0.0")) {
                                fechapeso = "1800-01-01";
                                peso = "999";
                            } else {
                                fechapeso = datames[b][31].toString();
                                String de[] = datames[b][19].toString().split("\\.");
                                peso = de[0];
                            }
                            //Fecha talla y talla
                            if (datames[b][20].toString().equals("0")) {
                                fechatalla = "1800-01-01";
                                talla = "999";
                            } else {
                                fechatalla = datames[b][31].toString();
                                talla = datames[b][20].toString();
                            }
                            //fecha parto
                            if (datames[b][21] == null) {
                                fechapparto = "1845-01-01";
                            } else {
                                fechapparto = datames[b][21].toString();
                            }
                            //Edad gestacional
                            if (datames[b][22] == null) {
                                egparto = "0";
                            } else {
                                egparto = datames[b][22].toString();
                            }
                            //bcg
                            //hepatitis b en menores de 1 año
                            //pentavalente
                            //polio
                            //dpt menores de 5 años
                            //rotavirus
                            //neumococo                            
                            //influenza niños
                            //fiebre amarilla niños de 1 año
                            //hepatitis a
                            //triple viral niños
                            //vph
                            //td o tt mujeres en edad fertil 15 a 49 años
                            //control placa bacteriana
                            //ultimo parto y concejeria lactancia materna
                            if (datames[b][9].toString().equals("M")) {
                                fechaparto = "1845-01-01";
                                fechalactancia = "1845-01-01";
                            } else {
                                if (datames[b][30].toString().equals("0001-01-01")) {
                                    fechaparto = "1800-01-01";
                                    fechalactancia = "1800-01-01";
                                } else {
                                    fechaparto = datames[b][30].toString();
                                    fechalactancia = datames[b][30].toString();
                                }
                            }
                            //salida parto
                            if (datames[b][9].toString().equals("M")) {
                                fechasalidaparto = "1845-01-01";
                            } else {
                                if (datames[b][30].toString().equals("0001-01-01")) {
                                    fechasalidaparto = "1800-01-01";
                                } else {
                                    fechasalidaparto = datames[b][30].toString();
                                }
                            }
                            //control recien
                            if (datames[b][0].toString().equals("10")) {
                                controlrecien = datames[b][31].toString();
                            } else {
                                controlrecien = "1845-01-01";
                            }
                            //planificacion y fecha suministro del metodo
                            if (datames[b][0].toString().equals("5")) {
                                if (datames[b][1].toString().equals("1")) {
                                    planificacionprimera = datames[b][31].toString();
                                    fechasuministro = datames[b][31].toString();
                                } else {
                                    planificacionprimera = "1800-01-01";
                                    fechasuministro = "1800-01-01";
                                }
                            } else {
                                planificacionprimera = "1845-01-01";
                                fechasuministro = "1845-01-01";
                            }
                            //suministro metodo 
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("60")) {
                                    if (datames[b][0].toString().equals("5")) {
                                        Object datoproce4505[][] = Funtions.RetornarDatos(act
                                                .contar4505procedimientos(datames[b][32].toString()));
                                        if (datoproce4505[0][0].toString().equals("0")) {
                                            Object datomedi4505[][] = Funtions.RetornarDatos(act
                                                    .contar4505medicamento(datames[b][32].toString()));
                                            if (!datomedi4505[0][0].toString().equals("0")) {
                                                Object datmedi4505[][] = Funtions.RetornarDatos(act
                                                        .cargar4505medicamento(datames[b][32].toString()));
                                                suministrometodo = datmedi4505[0][0].toString();
                                            }
                                        } else {
                                            Object datproce4505[][] = Funtions.RetornarDatos(act
                                                    .cargar4505procedimiento(datames[b][32].toString()));
                                            suministrometodo = datproce4505[0][0].toString();
                                        }
                                    } else {
                                        suministrometodo = "0";
                                    }
                                }
                            }
                            //control prenatal 1
                            if (datames[b][9].toString().equals("M")) {
                                controlprenatal1 = "1845-01-01";
                            } else {
                                if (datames[b][0].toString().equals("9")) {
                                    if (datames[b][1].toString().equals("1")) {
                                        controlprenatal1 = datames[b][31].toString();
                                    } else {
                                        controlprenatal1 = "1800-01-01";
                                    }
                                }
                            }
                            //n° controles
                            if (datames[b][9].toString().equals("M")) {
                                ncontroles = "0";
                            } else {
                                if (datames[b][0].toString().equals("9")) {
                                    if (datames[b][24] == null) {
                                        ncontroles = "999";
                                    } else {
                                        ncontroles = datames[b][24].toString();
                                    }
                                } else {
                                    if (datames[b][24] == null) {
                                        ncontroles = "0";
                                    }
                                }
                            }
                            //ultimo control
                            if (datames[b][9].toString().equals("M")) {
                                ultimocontrol = "1845-01-01";
                            } else {
                                if (datames[b][0].toString().equals("9")) {
                                    ultimocontrol = datames[b][31].toString();
                                } else {
                                    ultimocontrol = "1800-01-01";
                                }
                            }
                            //Acido folico
                            if (datames[b][9].toString().equals("M")) {
                                folico = "0";
                            } else {
                                Object dataposo[][] = Funtions.RetornarDatos(act.posologia4505(datames[b][32].toString()));
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("65")) {
                                        for (int j = 0; j < dataposo.length; j++) {
                                            if (dataparam[i][5].toString().equals(dataposo[j][0].toString())) {
                                                folico = "1";
                                            } else {
                                                folico = "20";
                                            }
                                        }
                                    }
                                }
                            }
                            //sulfato ferroso
                            if (datames[b][9].toString().equals("M")) {
                                ferroso = "0";
                            } else {
                                Object dataposo[][] = Funtions.RetornarDatos(act.posologia4505(datames[b][32].toString()));
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("66")) {
                                        for (int j = 0; j < dataposo.length; j++) {
                                            if (dataparam[i][5].toString().equals(dataposo[j][0].toString())) {
                                                ferroso = "1";
                                            } else {
                                                ferroso = "20";
                                            }
                                        }
                                    }
                                }
                            }
                            //calcio
                            if (datames[b][9].toString().equals("M")) {
                                calcio = "0";
                            } else {
                                Object dataposo[][] = Funtions.RetornarDatos(act.posologia4505(datames[b][32].toString()));
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("67")) {
                                        for (int j = 0; j < dataposo.length; j++) {
                                            if (dataparam[i][5].toString().equals(dataposo[j][0].toString())) {
                                                calcio = "1";
                                            } else {
                                                calcio = "20";
                                            }
                                        }
                                    }
                                }
                            }
                            //Agudeza visual y oftalmologia
                            if (datames[b][0].toString().equals("4")) {
                                agudezav = datames[b][31].toString();
                                oftalmologia = datames[b][31].toString();
                            } else {
                                agudezav = "1845-01-01";
                                oftalmologia = "1845-01-01";
                            }
                            //Desnutricion proteicocalorica
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("70")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        fechadesnutricion = datames[b][31].toString();
                                        break;
                                    } else {
                                        fechadesnutricion = "1845-01-01";
                                    }
                                }
                            }
                            //mujer o menor victima de maltrato
                            int año = 0;
                            String ed[] = datames[b][29].toString().split(" ");
                            String an = ed[0];
                            año = Integer.parseInt(an);
                            if (año < 18) {
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("71")) {
                                        if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                                || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                            fechamaltrato = datames[b][31].toString();
                                            break;
                                        } else {
                                            fechamaltrato = "1845-01-01";
                                        }
                                    }
                                }
                            } else {
                                if (datames[b][9].toString().equals("M")) {
                                    fechamaltrato = "1845-01-01";
                                } else {
                                    for (int i = 0; i < dataparam.length; i++) {
                                        if (dataparam[i][1].toString().equals("71")) {
                                            if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                                    || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                                fechamaltrato = datames[b][31].toString();
                                                break;
                                            } else {
                                                fechamaltrato = "1845-01-01";
                                            }
                                        }
                                    }
                                }
                            }
                            //victimas de violencia sexual
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("72")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        consultaviolencia = datames[b][31].toString();
                                        break;
                                    } else {
                                        consultaviolencia = "1845-01-01";
                                    }
                                }
                            }
                            //consulta nutricion
                            //consulta psicologia
                            //Consulta cyd1
                            if (datames[b][0].toString().equals("2")) {
                                if (datames[b][1].toString().equals("1")) {
                                    cyd1vez = datames[b][31].toString();
                                } else {
                                    cyd1vez = "1800-01-01";
                                }
                            } else {
                                cyd1vez = "1845-01-01";
                            }
                            //sulfato menor 10 años
                            if (datames[b][0].toString().equals("2")) {
                                Object dataposo[][] = Funtions.RetornarDatos(act.posologia4505(datames[b][32].toString()));
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("76")) {
                                        for (int j = 0; j < dataposo.length; j++) {
                                            if (año <= 10) {
                                                if (dataparam[i][5].toString().equals(dataposo[j][0].toString())) {
                                                    sulfato = "1";
                                                    break;
                                                } else {
                                                    sulfato = "20";
                                                }
                                            } else {
                                                sulfato = "0";
                                            }
                                        }
                                    }
                                }
                            }
                            //vitamina A
                            if (datames[b][0].toString().equals("2")) {
                                Object dataposo[][] = Funtions.RetornarDatos(act.posologia4505(datames[b][32].toString()));
                                for (int i = 0; i < dataparam.length; i++) {
                                    if (dataparam[i][1].toString().equals("77")) {
                                        for (int j = 0; j < dataposo.length; j++) {
                                            if (año <= 10) {
                                                if (dataparam[i][5].toString().equals(dataposo[j][0].toString())) {
                                                    vitaA = "1";
                                                    break;
                                                } else {
                                                    vitaA = "20";
                                                }
                                            } else {
                                                sulfato = "0";
                                            }
                                        }
                                    }
                                }
                            }
                            //joven primera vez
                            if (datames[b][0].toString().equals("1")) {
                                if (datames[b][1].toString().equals("1")) {
                                    joven1 = datames[b][31].toString();
                                } else {
                                    joven1 = "1800-01-01";
                                }
                            } else {
                                joven1 = "1845-01-01";
                            }
                            //adulto primera vez
                            if (datames[b][0].toString().equals("3")) {
                                if (datames[b][1].toString().equals("1")) {
                                    adulto1 = datames[b][31].toString();
                                    break;
                                } else {
                                    adulto1 = "1800-01-01";
                                }
                            } else {
                                adulto1 = "1845-01-01";
                            }
                            //preservativos entregados pcete its
                            //pdx - paciente multidiagnostico (todos de loquera)
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("83")) {
                                    if (datames[b][14].toString().equals(dataparam[i][5].toString()) || datames[b][15].toString().equals(dataparam[i][5].toString())
                                            || datames[b][16].toString().equals(dataparam[i][5].toString()) || datames[b][17].toString().equals(dataparam[i][5].toString())) {
                                        pdx = dataparam[i][6].toString();
                                        break;
                                    } else {
                                        pdx = "0";
                                    }
                                }
                            }
                            //asesoria pre test elisa vih
                            Object dataproced[][] = Funtions.RetornarDatos(act.procedimiento4505(datames[b][32].toString()));
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("81")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            preelisavih = datames[b][31].toString();
                                            break;
                                        } else {
                                            preelisavih = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //fecha antigeno hepatitis B
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("84")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechahb = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechahb = "1800-01-01";
                                            }
                                        } else {
                                            fechahb = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //resultado hpb
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("85")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadohb = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadohb = "22";
                                            }
                                        } else {
                                            resultadohb = "0";
                                        }
                                    }
                                }
                            }
                            //Fecha serologia sifilis
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("86")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechassifilis = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechassifilis = "1800-01-01";
                                            }
                                        } else {
                                            fechassifilis = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado serologia sifilis
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("87")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadossifilis = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadossifilis = "22";
                                            }
                                        } else {
                                            resultadossifilis = "0";
                                        }
                                    }
                                }
                            }
                            //fecha toma de elisa y asesoria post-test
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("88")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechatelisahiv = hb[0][2].toString();
                                                postelisavih = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechatelisahiv = "1800-01-01";
                                                postelisavih = "1845-01-01";
                                            }
                                        } else {
                                            fechatelisahiv = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado elisa hiv
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("89")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadoelisahiv = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadoelisahiv = "22";
                                            }
                                        } else {
                                            resultadoelisahiv = "0";
                                        }
                                    }
                                }
                            }
                            //fecha tsh neonatal
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("90")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechaths = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechaths = "1800-01-01";
                                            }
                                        } else {
                                            fechaths = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado tsh neonatal
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("91")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadoelisahiv = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadoelisahiv = "22";
                                            }
                                        } else {
                                            resultadoelisahiv = "0";
                                        }
                                    }
                                }
                            }
                            //tamizaje cancer de cuello uterino
                            //citologia cervico uterina
                            //citologia cervico uterina bethesda
                            //calidad de la muestra
                            //codigo donde se toma la muestra
                            //fecha coloscopia
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("97")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechacolposcopi = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechacolposcopi = "1800-01-01";
                                            }
                                        } else {
                                            fechacolposcopi = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //ips toma colposcopia
                            //Fecha de la biopsia cervical
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("99")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechabiopsia = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechabiopsia = "1800-01-01";
                                            }
                                        } else {
                                            fechabiopsia = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado de la biopsia cervical
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("100")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadobiopsia = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadobiopsia = "999";
                                            }
                                        } else {
                                            resultadobiopsia = "0";
                                        }
                                    }
                                }
                            }
                            //codigo habilitacion ips biopsia cervical
                            //fecha mamografia
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("102")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechamamografia = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechamamografia = "1800-01-01";
                                            }
                                        } else {
                                            fechamamografia = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //resultado mamografia
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("103")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadomamografia = hb[0][3].toString();
                                                break;
                                            } else {
                                                resultadomamografia = "999";
                                            }
                                        } else {
                                            resultadomamografia = "0";
                                        }
                                    }
                                }
                            }
                            //codigo habilitacion ips mamografia
                            //fecha toma biopcia bacaf
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("105")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechabacaf = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechabacaf = "1800-01-01";
                                            }
                                        } else {
                                            fechabacaf = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //fecha resultado biopsia bacaf
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("106")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                resultadobacaf = hb[0][2].toString();
                                                break;
                                            } else {
                                                resultadobacaf = "1800-01-01";
                                            }
                                        } else {
                                            resultadobacaf = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado biopsia bacaf
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("107")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                bacaf = hb[0][3].toString();
                                                break;
                                            } else {
                                                bacaf = "99";
                                            }
                                        } else {
                                            bacaf = "98";
                                        }
                                    }
                                }
                            }
                            //codigo de habilitacion biopsia bacaf
                            //fecha toma de emoglobina
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("109")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechahemoglobina = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechahemoglobina = "1800-01-01";
                                            }
                                        } else {
                                            fechahemoglobina = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //resultado hemoglobina
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("110")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                hemoglobina = hb[0][4].toString();
                                                break;
                                            } else {
                                                hemoglobina = "0";
                                            }
                                        } else {
                                            hemoglobina = "0";
                                        }
                                    }
                                }
                            }
                            //Fecha toma glicemia basal
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("111")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechaglisemia = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechaglisemia = "1800-01-01";
                                            }
                                        } else {
                                            fechaglisemia = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Fecha creatinina
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("112")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechacreatinina = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechacreatinina = "1800-01-01";
                                            }
                                        } else {
                                            fechacreatinina = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado creatinina
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("113")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                creatinina = hb[0][4].toString();
                                                break;
                                            } else {
                                                creatinina = "999";
                                            }
                                        } else {
                                            creatinina = "0";
                                        }
                                    }
                                }
                            }
                            //Fecha hemoglobina glicosada
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("114")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechaglicosada = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechaglicosada = "1800-01-01";
                                            }
                                        } else {
                                            fechaglicosada = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Resultado hemoglobina glicosada
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("115")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                glicosada = hb[0][4].toString();
                                                break;
                                            } else {
                                                glicosada = "999";
                                            }
                                        } else {
                                            glicosada = "0";
                                        }
                                    }
                                }
                            }
                            //Fecha toma de microalbuminuria
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("116")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechamicroalbuminuria = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechamicroalbuminuria = "1800-01-01";
                                            }
                                        } else {
                                            fechamicroalbuminuria = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //fecha toma hdl
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("117")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechahdl = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechahdl = "1800-01-01";
                                            }
                                        } else {
                                            fechahdl = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //fecha toma de baciloscopia de diagnostico
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("118")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                fechabaciloscopia = hb[0][2].toString();
                                                break;
                                            } else {
                                                fechabaciloscopia = "1800-01-01";
                                            }
                                        } else {
                                            fechabaciloscopia = "1845-01-01";
                                        }
                                    }
                                }
                            }
                            //Baciloscopia de diagnostico
                            for (int i = 0; i < dataparam.length; i++) {
                                if (dataparam[i][1].toString().equals("119")) {
                                    for (int j = 0; j < dataproced.length; j++) {
                                        if (dataparam[i][5].toString().equals(dataproced[j][0].toString())) {
                                            Object datacont[][] = Funtions.RetornarDatos(act.conteoexamen(dataproced[j][1].toString()));
                                            if (!datacont[0][0].toString().equals("0")) {
                                                Object hb[][] = Funtions.RetornarDatos(act.cargadatoslaboratorio(dataproced[j][1].toString()));
                                                baciloscopia = hb[0][3].toString();
                                                break;
                                            } else {
                                                baciloscopia = "3";
                                            }
                                        } else {
                                            baciloscopia = "4";
                                        }
                                    }
                                }
                            }
                            rel4505.setAbusos(abusos);
                            rel4505.setAdulto1(adulto1);
                            rel4505.setAgudezav(agudezav);
                            rel4505.setApellido(apellido);
                            rel4505.setApellido2(apellido2);
                            rel4505.setBacaf(bacaf);
                            rel4505.setBaciloscopia(baciloscopia);
                            rel4505.setBgc(bgc);
                            rel4505.setCalcio(calcio);
                            rel4505.setCalidadmuestra(calidadmuestra);
                            rel4505.setCervix(cervix);
                            rel4505.setCitologia(citologia);
                            rel4505.setCitologiabet(citologiabet);
                            rel4505.setCodigobacaf(codigobacaf);
                            rel4505.setCodigobiopsia(codigobiopsia);
                            rel4505.setCodigoips(codigoips);
                            rel4505.setCodigoipscolpo(codigoipscolpo);
                            rel4505.setCodigoipsprimaria(codigoipsprimaria);
                            rel4505.setCodigomamografia(codigomamografia);
                            rel4505.setCodocupacion(codocupacion);
                            rel4505.setConsecutivo(consecutivo);
                            rel4505.setConsultaviolencia(consultaviolencia);
                            rel4505.setControlprenatal1(controlprenatal1);
                            rel4505.setControlrecien(controlrecien);
                            rel4505.setCreatinina(creatinina);
                            rel4505.setCyd1vez(cyd1vez);
                            rel4505.setDpt(dpt);
                            rel4505.setEgparto(egparto);
                            rel4505.setEscolaridad(escolaridad);
                            rel4505.setEtnia(etnia);
                            rel4505.setFechabacaf(fechabacaf);
                            rel4505.setFechabaciloscopia(fechabaciloscopia);
                            rel4505.setFechabiopsia(fechabiopsia);
                            rel4505.setFechacolposcopi(fechacolposcopi);
                            rel4505.setFechacreatinina(fechacreatinina);
                            rel4505.setFechadesnutricion(fechadesnutricion);
                            rel4505.setFechaglicosada(fechaglicosada);
                            rel4505.setFechaglisemia(fechaglisemia);
                            rel4505.setFechahb(fechahb);
                            rel4505.setFechahdl(fechahdl);
                            rel4505.setFechahemoglobina(fechahemoglobina);
                            rel4505.setFechalactancia(fechalactancia);
                            rel4505.setFechamaltrato(fechamaltrato);
                            rel4505.setFechamamografia(fechamamografia);
                            rel4505.setFechamicroalbuminuria(fechamicroalbuminuria);
                            rel4505.setFechanacimiento(fechanacimiento);
                            rel4505.setFechanutricion(fechanutricion);
                            rel4505.setFechaparto(fechaparto);
                            rel4505.setFechapeso(fechapeso);
                            rel4505.setFechapparto(fechapparto);
                            rel4505.setFechapsicologia(fechapsicologia);
                            rel4505.setFechasalidaparto(fechasalidaparto);
                            rel4505.setFechassifilis(fechassifilis);
                            rel4505.setFechasuministro(fechasuministro);
                            rel4505.setFechatalla(fechatalla);
                            rel4505.setFechatelisahiv(fechatelisahiv);
                            rel4505.setFechaths(fechaths);
                            rel4505.setFerroso(ferroso);
                            rel4505.setFiebreA(fiebreA);
                            rel4505.setFluorosis(fluorosis);
                            rel4505.setFolico(folico);
                            rel4505.setGenero(genero);
                            rel4505.setGestacion(gestacion);
                            rel4505.setGlicosada(glicosada);
                            rel4505.setHemoglobina(hemoglobina);
                            rel4505.setHepatitisA(hepatitisA);
                            rel4505.setHepatitisb(hepatitisb);
                            rel4505.setHipot(hipot);
                            rel4505.setHipotiroidismo(hipotiroidismo);
                            rel4505.setHtagesta(htagesta);
                            rel4505.setIdentificacion(identificacion);
                            rel4505.setInfecciones(infecciones);
                            rel4505.setInfluenza(influenza);
                            rel4505.setJoven1(joven1);
                            rel4505.setLeishmaniasis(leishmaniasis);
                            rel4505.setLepra(lepra);
                            rel4505.setMaltrato(maltrato);
                            rel4505.setMental(mental);
                            rel4505.setNcontroles(ncontroles);
                            rel4505.setNeumococo(neumococo);
                            rel4505.setNombre(nombre);
                            rel4505.setNombre2(nombre2);
                            rel4505.setNombreprograma(nombreprograma);
                            rel4505.setNutri(nutri);
                            rel4505.setOftalmologia(oftalmologia);
                            rel4505.setPdx(pdx);
                            rel4505.setPentavalente(pentavalente);
                            rel4505.setPeso(peso);
                            rel4505.setPlacab(placab);
                            rel4505.setPlanificacionprimera(planificacionprimera);
                            rel4505.setPolio(polio);
                            rel4505.setPostelisavih(postelisavih);
                            rel4505.setPreelisavih(preelisavih);
                            rel4505.setPreservativosits(preservativosits);
                            rel4505.setResultadobacaf(resultadobacaf);
                            rel4505.setResultadobiopsia(resultadobiopsia);
                            rel4505.setResultadoelisahiv(resultadoelisahiv);
                            rel4505.setResultadohb(resultadohb);
                            rel4505.setResultadomamografia(resultadomamografia);
                            rel4505.setResultadossifilis(resultadossifilis);
                            rel4505.setResultadotsh(resultadotsh);
                            rel4505.setRotavirus(rotavirus);
                            rel4505.setScongenita(scongenita);
                            rel4505.setSeno(seno);
                            rel4505.setSgestacional(sgestacional);
                            rel4505.setSifilis(sifilis);
                            rel4505.setSintomr(sintomr);
                            rel4505.setSulfato(sulfato);
                            rel4505.setSuministrometodo(suministrometodo);
                            rel4505.setTalla(talla);
                            rel4505.setTamizajecuellou(tamizajecuellou);
                            rel4505.setTdtt(tdtt);
                            rel4505.setTipodoc(tipodoc);
                            rel4505.setTlepra(tlepra);
                            rel4505.setTripev(tripev);
                            rel4505.setTuberculosis(tuberculosis);
                            rel4505.setUltimocontrol(ultimocontrol);
                            rel4505.setVitaA(vitaA);
                            rel4505.setVph(vph);
                            //control prenatal y planificacion no generan ¬¬
                            escribir.write(rel4505.Rel4505(jComboBox1) + ln);
                        }
                        escribir.close();
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Error creacion archivo 4505: " + e.getMessage(), Rel4505.class.getName(), JOptionPane.INFORMATION_MESSAGE);
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Error creacion archivo 4505: " + e.getMessage(), Rel4505.class.getName(), JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El rango de fecha ingresado no es valido");
                }
            }

            if (jCheckBox2.isSelected() == true) {
                fecini = formato.format(jDateChooser3.getDate());
                fecfin = formato.format(jDateChooser4.getDate());
                boolean bol = false;
                if ((jDateChooser4.getDate().getMonth() - jDateChooser3.getDate().getMonth()) != 2) {
                    JOptionPane.showMessageDialog(null, "Debe seleccionar un rango de fecha valido");
                } else {
                    long val = jDateChooser4.getCalendar().getTimeInMillis() - jDateChooser3.getCalendar().getTimeInMillis();
                    long dias = val / (24 * 60 * 60 * 1000);
                    if (jRadioButton1.isSelected() == true) {
                        if (jDateChooser3.getDate().getMonth() == 0 && jDateChooser4.getDate().getMonth() == 2) {
                            if (dias == 89 || dias == 90) {
                                bol = true;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El rango de fechas seleccionadas no es valido");
                        }
                    }
                    if (jRadioButton2.isSelected() == true) {
                        if (jDateChooser3.getDate().getMonth() == 3 && jDateChooser4.getDate().getMonth() == 5) {
                            if (dias == 90) {
                                bol = true;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El rango de fechas seleccionadas no es valido");
                        }
                    }
                    if (jRadioButton3.isSelected() == true) {
                        if (jDateChooser3.getDate().getMonth() == 6 && jDateChooser4.getDate().getMonth() == 8) {
                            if (dias == 91) {
                                bol = true;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El rango de fechas seleccionadas no es valido");
                        }
                    }
                    if (jRadioButton4.isSelected() == true) {
                        if (jDateChooser3.getDate().getMonth() == 9 && jDateChooser4.getDate().getMonth() == 11) {
                            if (dias == 91) {
                                bol = true;
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "El rango de fechas seleccionadas no es valido");
                        }
                    }
                }
                if (bol == true) {
                    Object datatri[][] = Funtions.RetornarDatos(act.rel4505tri(jComboBox1.getSelectedItem().toString(), fecini, fecfin));
                    try {
                        File archivo = new File(ruta, "4505 " + jComboBox1.getSelectedItem() + " Trimestral.txt");
                        if (archivo.exists()) {
                            archivo.delete();
                            archivo.createNewFile();
                        } else {
                            archivo.createNewFile();
                        }
                        System.out.println(archivo.getAbsolutePath());
                        FileWriter escribir = new FileWriter(archivo, true);
                        for (int b = 0; b < datatri.length; b++) {
                            if (datatri[b][5].toString().equals("")) {
                                apellido2 = "NONE";
                            } else {
                                apellido2 = datatri[b][5].toString();
                            }
                            if (datatri[b][7].toString().equals("")) {
                                nombre2 = "NONE";
                            } else {
                                nombre2 = datatri[b][7].toString();
                            }
                            genero = datatri[b][9].toString();

                            escribir.write(datatri[b][0].toString() + "|1|999||||2|" + (b + 1) + "|" + codigoipsprimaria + "|" + datatri[b][2] + "|" + datatri[b][3] + "|" + datatri[b][4] + "|" + apellido2
                                    + "|" + datatri[b][6] + "|" + nombre2 + "|" + datatri[b][8] + "|" + datatri[b][9] + "|" + etnia + "|" + codocupacion + "|" + escolaridad + "|" + gestacion + "|" + sifilis + "|"
                                    + htagesta + "|" + hipot + "|" + sintomr + "|" + tuberculosis + "|" + lepra + "|" + nutri + "|" + maltrato + "|" + abusos + "|" + infecciones + "|" + mental + "|"
                                    + cervix + "|" + seno + "|" + fluorosis + "|" + fechapeso + "|" + peso + "|" + fechatalla + "|" + talla + "|" + fechapparto + "|" + egparto + "|" + bgc + "|"
                                    + hepatitisb + "|" + pentavalente + "|" + polio + "|" + dpt + "|" + rotavirus + "|" + neumococo + "|" + influenza + "|" + fiebreA + "|" + hepatitisA + "|"
                                    + tripev + "|" + vph + "|" + tdtt + "|" + placab + "|" + fechaparto + "|" + fechasalidaparto + "|" + fechalactancia + "|" + controlrecien + "|"
                                    + planificacionprimera + "|" + suministrometodo + "|" + fechasuministro + "|" + controlprenatal1 + "|" + ncontroles + "|" + ultimocontrol + "|"
                                    + folico + "|" + ferroso + "|" + calcio + "|" + agudezav + "|" + oftalmologia + "|" + fechadesnutricion + "|" + fechamaltrato + "|" + consultaviolencia + "|"
                                    + fechanutricion + "|" + fechapsicologia + "|" + cyd1vez + "|" + sulfato + "|" + vitaA + "|" + joven1 + "|" + adulto1 + "|" + preservativosits + "|" + preelisavih + "|"
                                    + postelisavih + "|" + pdx + "|" + fechahb + "|" + resultadohb + "|" + fechassifilis + "|" + resultadossifilis + "|" + fechatelisahiv + "|" + resultadoelisahiv + "|"
                                    + fechaths + "|" + resultadotsh + "|" + tamizajecuellou + "|" + citologia + "|" + citologiabet + "|" + calidadmuestra + "|" + codigoips + "|" + fechacolposcopi + "|"
                                    + codigoipscolpo + "|" + fechabiopsia + "|" + resultadobiopsia + "|" + codigobiopsia + "|" + fechamamografia + "|" + resultadomamografia + "|"
                                    + codigomamografia + "|" + fechabacaf + "|" + resultadobacaf + "|" + bacaf + "|" + codigobacaf + "|" + fechahemoglobina + "|" + hemoglobina + "|"
                                    + fechaglisemia + "|" + fechacreatinina + "|" + creatinina + "|" + fechaglicosada + "|" + glicosada + "|" + fechamicroalbuminuria + "|" + fechahdl + "|"
                                    + fechabaciloscopia + "|" + baciloscopia + "|" + hipotiroidismo + "|" + sgestacional + "|" + scongenita + "|" + tlepra + "|" + leishmaniasis + ln);
                        }
                        escribir.close();
                    } catch (IOException e) {
                        JOptionPane.showMessageDialog(null, "Error creacion archivo 4505: " + e.getMessage(), Rel4505.class.getName(), JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El rango de fechas seleccionado no corresponde a la cantidad de dias del trimestre seleccionado");
                }
            }
            jLabel2.setVisible(false);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton jButton1;
    javax.swing.JButton jButton6;
    javax.swing.JCheckBox jCheckBox1;
    javax.swing.JCheckBox jCheckBox2;
    javax.swing.JComboBox jComboBox1;
    com.toedter.calendar.JDateChooser jDateChooser1;
    com.toedter.calendar.JDateChooser jDateChooser2;
    com.toedter.calendar.JDateChooser jDateChooser3;
    com.toedter.calendar.JDateChooser jDateChooser4;
    javax.swing.JLabel jLabel1;
    javax.swing.JLabel jLabel2;
    javax.swing.JLabel jLabel4;
    javax.swing.JLabel jLabel5;
    javax.swing.JLabel jLabel6;
    javax.swing.JLabel jLabel7;
    javax.swing.JLabel jLabel8;
    javax.swing.JRadioButton jRadioButton1;
    javax.swing.JRadioButton jRadioButton2;
    javax.swing.JRadioButton jRadioButton3;
    javax.swing.JRadioButton jRadioButton4;
    // End of variables declaration//GEN-END:variables
}
